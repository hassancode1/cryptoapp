{"version":3,"sources":["Components/Coin.js","Images/refresh.png","Routes/Home.js","Images/cryptobckg.jpeg","Routes/CoinPage.js","App.js","index.js"],"names":["Coin","icon","coinName","coinSymbol","price","marketCap","priceChange","id","history","useHistory","className","src","toFixed","toLocaleString","onClick","push","Home","useState","coins","setCoins","searchTerm","setSearchTerm","isLoading","setIsLoading","useEffect","refreshPage","filterCoins","filter","coin","name","toLowerCase","includes","Axios","get","then","response","console","log","data","placeholder","type","onChange","e","target","value","Refresh","map","image","symbol","current_price","market_cap","price_change_percentage_24h","CoinPage","useParams","setCoin","style","backgroundImage","BackgroundImg","backgroundRepeat","backgroundSize","large","alt","market_data","usd","total_volume","high_24h","low_24h","to","App","path","exact","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32575f05.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../Components/Coin.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Coin = ({\r\n  icon,\r\n  coinName,\r\n  coinSymbol,\r\n  price,\r\n  marketCap,\r\n  priceChange,\r\n  id,\r\n}) => {\r\n  let history = useHistory();\r\n  return (\r\n    <div className=\"coinContainer\">\r\n      <div className=\"coinRow\">\r\n        <div className=\"coinData\">\r\n          <div className=\"coin\">\r\n            <img src={icon} />\r\n            <h1 className=\"coinName\">{coinName}</h1>\r\n            <p className=\"coinSymbol\">{coinSymbol}</p>\r\n            <p className=\"coinPrice\">$ {price.toFixed(2)}</p>\r\n            {priceChange < 0 ? (\r\n              <p className=\"priceChange red\">{priceChange.toFixed(2)}%</p>\r\n            ) : (\r\n              <p className=\"priceChange green\">{priceChange.toFixed(2)}%</p>\r\n            )}\r\n            <p className=\"coinVolume\">$ {marketCap.toLocaleString()}</p>\r\n            <button\r\n              onClick={() => {\r\n                history.push(`/CoinPage/${id}`);\r\n              }}\r\n            >\r\n              More Info\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","export default __webpack_public_path__ + \"static/media/refresh.2393f92f.png\";","import \"../App.css\";\r\nimport Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Coin from \"../Components/Coin\";\r\nimport Refresh from \"../Images/refresh.png\";\r\n\r\nfunction Home() {\r\n  const [coins, setCoins] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    refreshPage();\r\n  }, []);\r\n\r\n  const filterCoins = coins.filter((coin) =>\r\n    coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const refreshPage = () => {\r\n    setIsLoading(true);\r\n    Axios.get(\r\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n    ).then((response) => {\r\n      console.log(response.data);\r\n      setIsLoading(false);\r\n      setCoins(response.data);\r\n    });\r\n  };\r\n\r\n  // const getCoins = () => {\r\n  //   Axios.get(\r\n  //     \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n  //   ).then((response) => {\r\n  //     console.log(response);\r\n  //     setCoins(response.data);\r\n  //   });\r\n  // };\r\n\r\n  // <Route exact path=\"/coin/:id\"\r\n\r\n  // history.push(\"/coin/${id}\")\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"headerContainer\">\r\n        <h1>Welcome to the CryptoChecker</h1>\r\n        <div className=\"buttonContainer\">\r\n          <input\r\n            placeholder=\"Search for a Coin\"\r\n            type=\"text\"\r\n            onChange={handleSearch}\r\n          />\r\n          <img onClick={refreshPage} src={Refresh}></img>\r\n        </div>\r\n      </div>\r\n      <div className=\"coinContainer\">\r\n        {isLoading && <h1 className=\"loadingMssg\">Data Loading...</h1>}\r\n        {filterCoins.map((coins) => {\r\n          return (\r\n            <Coin\r\n              id={coins.id}\r\n              icon={coins.image}\r\n              coinName={coins.name}\r\n              coinSymbol={coins.symbol}\r\n              price={coins.current_price}\r\n              marketCap={coins.market_cap}\r\n              priceChange={coins.price_change_percentage_24h}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/cryptobckg.ebcf75b7.jpeg\";","import React from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"../Routes/Styles/CoinPage.css\";\r\nimport BackgroundImg from \"../Images/cryptobckg.jpeg\";\r\n\r\nfunction CoinPage() {\r\n  let { id } = useParams();\r\n  const [coin, setCoin] = useState(null);\r\n  // coin start has to be null first to give time to fetch API data\r\n\r\n  useEffect(() => {\r\n    console.log(id);\r\n    Axios.get(`https://api.coingecko.com/api/v3/coins/${id}`).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        setCoin(response.data);\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  // if statement to check if data has reached, only then render the component\r\n  if (coin) {\r\n    return (\r\n      <div\r\n        className=\"coinPage-Container\"\r\n        style={{\r\n          backgroundImage: `url(${BackgroundImg})`,\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n        }}\r\n      >\r\n        <div className=\"coinPage-Info\">\r\n          <h1>{coin.name}</h1>\r\n          <img src={coin.image.large} alt=\"Icon\" className=\"coinPage-Icon\" />\r\n          <div className=\"coinPage-Data\">\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">Symbol:</h3>\r\n              <h3 className=\"coinPage-RowData\">{coin.symbol}</h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">Current Price:</h3>\r\n              <h3 className=\"coinPage-RowData\">\r\n                $ {coin.market_data.current_price.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">Market Cap:</h3>\r\n              <h3 className=\"coinPage-RowData\">\r\n                $ {coin.market_data.market_cap.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">Total Volume:</h3>\r\n              <h3 className=\"coinPage-RowData\">\r\n                $ {coin.market_data.total_volume.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">24hr High:</h3>\r\n              <h3 className=\"coinPage-RowData green\">\r\n                $ {coin.market_data.high_24h.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n            <div className=\"coinPage-Row\">\r\n              <h3 className=\"coinPage-RowHeader\">24hr Low:</h3>\r\n              <h3 className=\"coinPage-RowData red\">\r\n                $ {coin.market_data.low_24h.usd.toLocaleString()}\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <Link to=\"/\">\r\n            <div className=\"coinPage-RouteButton\">Go back</div>\r\n          </Link>\r\n\r\n          {/* coinName={coins.name}\r\n              coinSymbol={coins.symbol}\r\n              price={coins.current_price}\r\n              marketCap={coins.market_cap}\r\n              priceChange={ */}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null; // if API data not fetched, return null\r\n  }\r\n}\r\n\r\nexport default CoinPage;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport Home from \"./Routes/Home\";\r\nimport CoinPage from \"./Routes/CoinPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Route path=\"/\" exact render={(props) => <Home />} />\r\n        <Route path=\"/CoinPage/:id\" exact render={(props) => <CoinPage />} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}